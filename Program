import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.awt.*;//abstract window toolkit
import java.awt.geom.*;// perform 2d geometry operation
import javax.swing.*;


public class demand {
    public static void details() {
        Scanner scanner = new Scanner(System.in);

        // Prompt the user for their password, and company name
        System.out.print("Enter your Company name: ");
        String Company_name = scanner.nextLine();

        System.out.print("Enter your password: ");
        String password = scanner.nextLine();

        scanner.close();

        System.out.println("plz wait processing ..");
        try {
            Thread.sleep(5000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        // After the 20-second delay, you can perform further actions if needed
        System.out.println("Thank you for wait");

        try {
            // Open a file for appending (or create it if it doesn't exist)
            FileWriter fileWriter = new FileWriter("company_info.txt", true);
            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);

            // Write the company name and password to the file
            bufferedWriter.write("Company Name: " + Company_name + "\n");
            bufferedWriter.write("Password: " + password + "\n");
            bufferedWriter.write("\n");  // Add a blank line to separate entries

            // Close the file to save the data
            bufferedWriter.close();

            System.out.println("Company information has been saved to 'company_info.txt'.");
        } catch (IOException e) {
            System.err.println("An error occurred while writing to the file: " + e.getMessage());
        }



        System.out.println("plz wait processing ..");
        try {
            Thread.sleep(5000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

    }

//user defined function  on regression
public static void  linearregression(ArrayList<Double>Xvalues,ArrayList<Double>Yvalues) {


// calculating slope
    double size = Xvalues.size();
    double sumxy = 0;
    double sumx = 0;
    double sumy = 0;
    double sumx2 = 0;


    for (int i = 0; i < size; i++) {
      double x = Xvalues.get(i);
        double y = Yvalues.get(i);

       sumxy += x * y;
        sumx += x;
        sumy += y;
        sumx2 = x * x;
    }


    double slope =  (size*sumxy-sumx*sumy)/(size*sumx2-sumx2);
slope = Math.abs(slope);   //make this positive
    System.out.println("SLOPE:"+slope);

    // calculating intercept
    double intercept=(sumy-slope*sumx)/size;
intercept= Math.abs(intercept);
    System.out.println("INTERCEPT:"+intercept);
predicted(slope, intercept);




}
public static void predicted(double slope , double intercept)
{

    File file1 = new File("E:\\PROJECTS\\MINOR 1\\sale_pricetest.csv");
    ArrayList<Double> saleprice = new ArrayList<>();
    String[] parts=new String[2];
    ArrayList<String> categoryname  = new ArrayList<>();
    try {
        // Using BufferedReader to read the CSV file
        FileReader fr1 = new FileReader(file1);
        BufferedReader br1 = new BufferedReader(fr1);
        String line;

        // Create ArrayList to store data from the CSV file


        while ((line = br1.readLine()) != null) {
            StringTokenizer token = new StringTokenizer(line,",");
            if (token.countTokens() == 2 ){

                parts= line.split(",");

               double xvalue1;

                try {
                  xvalue1  = Double.parseDouble(token.nextToken().trim());

                }catch (NumberFormatException e) {
                    System.out.println("processing..........");
                    continue;
                }
                String product = token.nextToken().trim();
                categoryname.add(product);
                saleprice.add(xvalue1);

}}


        br1.close();


        ArrayList<Double> predicted_unitssold  = new ArrayList<>();// to store predicted data



        for(int i=0 ; i< saleprice.size();i++){

              double yvalue1= slope*saleprice.get(i)+intercept;

            predicted_unitssold.add(yvalue1);
        }




        saveToCSV("E:\\PROJECTS\\MINOR 1\\testdata_and_predictions.csv",categoryname, saleprice, predicted_unitssold);






    }
    catch (IOException e) {
        System.out.println("An error occurred: " + e.getMessage());
    }




}


    public static void saveToCSV(String filePath, ArrayList<String>categoryname, ArrayList<Double> testdata, ArrayList<Double> predicted_value) {
        try {
            File file = new File(filePath);

            // Check if the file already exists, if not, create a new file
            if (!file.exists()) {
                file.createNewFile();
            }

            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);

            // Write the header
            bw.write("CategoryName,Sale Price,Predicted_UnitsSold");
            bw.newLine();

            // Write data
            for (int i = 0; i < testdata.size(); i++) {
                bw.write(categoryname.get(i)+","+testdata.get(i) + "," + predicted_value.get(i));
                bw.newLine();
            }

            bw.close();
            fw.close();

            System.out.println("Data saved to " + filePath);
        } catch (IOException e) {
            System.out.println("An error occurred while saving to CSV: " + e.getMessage());
        }
    }


 public static void main(String[] args) {
    details();// function call
        // Creating FILE CLASS and also passing the CSV file path
        File file = new File("E:\\PROJECTS\\MINOR 1\\sample.csv");
ArrayList<Double> sale_price = new ArrayList<>();
ArrayList <Double> units_sold =new ArrayList<>();
        String[] parts=new String[3];
        try {
            // Using BufferedReader to read the CSV file
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            String line;

            // Create ArrayList to store data from the CSV file
            //System.out.println("SALE PRICE"+"\t"+"\t"+"UNITS SOLD");

            while ((line = br.readLine()) != null) {
                StringTokenizer token = new StringTokenizer(line,",");
                if (token.countTokens() == 3) {
                    token.nextToken();//skip the index
                    double xvalue ;
                    double yvalue ;
                    parts= line.split(",");
                    System.out.println(parts[1]+"\t\t"+parts[2]);
                    try {
                        xvalue = Double.parseDouble(token.nextToken().trim());
                        yvalue = Double.parseDouble(token.nextToken().trim());
                    }catch (NumberFormatException e) {
                        System.out.println("processing..........");
                        continue;
                    }

                    sale_price.add(xvalue);
                    units_sold.add(yvalue);

                }
            }
            br.close();



            linearregression(sale_price,units_sold); // calling linearregression  user defined function




        }
        catch (IOException e) {
            System.out.println("An error occurred: " + e.getMessage());
        }

    }}
